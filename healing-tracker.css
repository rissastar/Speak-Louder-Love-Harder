// healing-tracker.js

document.addEventListener('DOMContentLoaded', () => {
  const quoteText = document.getElementById('quote-text');
  const moodSelect = document.getElementById('mood');
  const reflectionTextarea = document.getElementById('reflection');
  const saveBtn = document.getElementById('save-btn');
  const clearBtn = document.getElementById('clear-btn');
  const exportBtn = document.getElementById('export-btn');
  const backBtn = document.getElementById('back-btn');

  const STORAGE_KEY = 'healingTrackerEntry';

  // Array of motivational quotes
  const quotes = [
    "🌟 “You are stronger than you think.”",
    "🌈 “Every day is a new beginning.”",
    "💪 “Small steps lead to big changes.”",
    "🌻 “Healing is a journey, not a race.”",
    "✨ “Be gentle with yourself.”",
    "🌿 “Growth begins in the moments of struggle.”",
    "🌞 “You’ve survived 100% of your bad days.”",
    "🌙 “Rest when you need to, but never quit.”"
  ];

  // Show a random quote on page load
  function showRandomQuote() {
    const randomIndex = Math.floor(Math.random() * quotes.length);
    quoteText.textContent = quotes[randomIndex];
  }

  // Load saved entry from localStorage if any
  function loadSavedEntry() {
    const saved = localStorage.getItem(STORAGE_KEY);
    if (saved) {
      try {
        const data = JSON.parse(saved);
        moodSelect.value = data.mood || '';
        reflectionTextarea.value = data.reflection || '';
      } catch {
        // If JSON parse fails, clear the storage
        localStorage.removeItem(STORAGE_KEY);
      }
    }
  }

  // Save current entry to localStorage
  function saveEntry() {
    const mood = moodSelect.value;
    const reflection = reflectionTextarea.value.trim();

    if (!mood) {
      alert('Please select your mood before saving.');
      return;
    }

    const data = { mood, reflection };
    localStorage.setItem(STORAGE_KEY, JSON.stringify(data));
    alert('Your entry has been saved!');
  }

  // Clear saved entry and reset form
  function clearEntry() {
    localStorage.removeItem(STORAGE_KEY);
    moodSelect.value = '';
    reflectionTextarea.value = '';
    alert('Saved entry cleared.');
  }

  // Export current entry as a .txt file
  function exportEntry() {
    const mood = moodSelect.value;
    const reflection = reflectionTextarea.value.trim();

    if (!mood) {
      alert('Please select your mood before exporting.');
      return;
    }

    const dateStr = new Date().toLocaleDateString();
    const content =
      `Daily Healing Tracker Entry - ${dateStr}\n\n` +
      `Mood: ${moodSelect.options[moodSelect.selectedIndex].text}\n\n` +
      `Reflection:\n${reflection || '(No additional reflection provided)'}\n`;

    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);

    const a = document.createElement('a');
    a.href = url;
    a.download = `Healing_Tracker_${dateStr.replace(/\//g, '-')}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  }

  // Go back button to previous page
  function goBack() {
    window.history.back();
  }

  // Animate emoji in quote for subtle movement
  function animateEmoji() {
    quoteText.classList.add('animate-emoji');
    setTimeout(() => {
      quoteText.classList.remove('animate-emoji');
    }, 4000);
  }

  // Initialize app
  showRandomQuote();
  loadSavedEntry();
  animateEmoji();

  saveBtn.addEventListener('click', () => {
    saveEntry();
    animateEmoji();
  });

  clearBtn.addEventListener('click', () => {
    if (confirm('Are you sure you want to clear the saved entry?')) {
      clearEntry();
    }
  });

  exportBtn.addEventListener('click', exportEntry);
  backBtn.addEventListener('click', goBack);
});